####################
#  Orientation restrictions in area are defined by 12 or 20
#  double numbers (12 numbers for 8 neighbours, 20 numbers for 16 neighbours)
#  in one line, that are separated by space 
#  (other separation types will cause an error!)
#  First 4 numbers define rectangle area bounds in global coordinate frame
#  Coordinates of first point should be less than coordinates of second
#  (min_x < max_x, min_y < max_y)
#  Following 8 or 16 numbers define restriction array
#  All numbers in array should be belong interval [0, 1]
#  Subsequence of numbers in array is determined by the rule:
#  First number reflects the assessment of the transition 
#  when the robot moves along the x-axis, next angle evaluations
#  go by roundabout counterclockwise
#  The graphical representation is shown below: 
#  For 8 neighbours:                   For 16 neighbours:
#              x                                           x
#              ^                         3   2   1  16  15 ^
#    2   1   8 |                         4              14 |
#    3  i,j  7 |                         5      i,j     13 |
#    4   5   6 |                         6              12 |
#  y<----------|                         7   8   9  10  11 |
#                                      y<------------------|
#  Data line:
#  min_x min_y max_x max_y r[1] r[2] ... r[8] ... r[16]
#  Combining lines with 12 and 20 numbers is not allowed
#  Restriction areas can overlap, but restriction array for the intersection
#  will be taken from the bottom lines 
#  Symbol # is used for comments
####################

-2 -2 2 2 0 1 1 1 1 1 1 1 #Area 1

2  -2 4 2 1 0 1 1 1 1 1 1 #Area 2

